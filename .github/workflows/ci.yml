name: CI/CD Pipeline

on:
  pull_request: # PR 발생 시 테스트 실행
    branches:
      - main
  push: # main 브랜치에 push 시 릴리즈 진행
    branches:
      - main

jobs:
  # 1. 테스트 단계
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set Up Gradle
        uses: gradle/gradle-build-action@v3

      - name: Run Tests
        run: ./gradlew test

  # 2. 릴리즈 및 퍼블리싱 단계
  release:
    name: Release and Publish
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 모든 Git 히스토리 가져오기 (semantic-release 필수)

      - name: Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm install

      - name: Set Up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set Up Gradle
        uses: gradle/gradle-build-action@v3

      - name: Build and Publish to Maven Local
        run: ./gradlew publishToMavenLocal

      - name: Run Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
